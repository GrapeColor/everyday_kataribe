name: Build and deploy Docker Image

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - '*'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install npm packages
        run: npm ci

      - name: Compile TypeScript
        run: tsc

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set IMAGE_NAME and SHORT_SHA
        run: |
          echo IMAGE_NAME=$(echo ghcr.io/${{ github.repository }} | tr A-Z a-z) >> $GITHUB_ENV
          echo SHORT_SHA=$(echo ${{ github.sha }} | cut -c 1-7) >> $GITHUB_ENV

      - name: Set image tag with git tag to environments
        if: ${{ github.event_name == 'tags' }}
        run: echo IMAGE_TAG_WITH_GIT_TAG=${{ env.IMAGE_NAME }}:$(echo ${{ github.ref }} | sed -r "s/^refs\/tags\/(.+)$/\1/g") >> $GITHUB_ENV

      - name: Set empty string to IMAGE_TAG_WITH_GIT_TAG
        if: ${{ github.event_name != 'tags' }}
        run: echo IMAGE_TAG_WITH_GIT_TAG= >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
            ${{ env.IMAGE_TAG_WITH_GIT_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move Docker image chace
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  # deploy:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Set IMAGE_NAME
  #       run: echo IMAGE_NAME=$(echo ghcr.io/${{ github.repository }} | tr A-Z a-z) >> $GITHUB_ENV

  #     - name: Deploy docker image to remote
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.SSH_KEY }}
  #         port: ${{ secrets.SSH_PORT }}
  #         script: |
  #           cd ${{ secrets.PRODUCTION_PATH }}
